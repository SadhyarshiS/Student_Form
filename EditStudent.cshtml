@model Student

@{
    ViewBag.Title = "Edit Student";
}

<div class="container mt-3 border-dark">
    <h2 class="text-center text-primary">Edit Student</h2>

    @if (TempData["Message"] != null)
    {
        <div class="alert alert-success">@TempData["Message"]</div>
    }

    @using (Html.BeginForm("EditStudent", "Student", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.sid) <!-- Hidden field to retain the student ID -->

        <!-- Personal Details -->
        <div class="row g-3 mt-3">
            <div class="col-md-4">
                @Html.LabelFor(m => m.fname, "First Name", new { @class = "form-label" })
                <span class="text-danger">*</span>
                @Html.TextBoxFor(m => m.fname, new { @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(m => m.fname, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">
                @Html.LabelFor(m => m.mname, "Middle Name", new { @class = "form-label" })
                @Html.TextBoxFor(m => m.mname, new { @class = "form-control" })
            </div>
            <div class="col-md-4">
                @Html.LabelFor(m => m.lname, "Last Name", new { @class = "form-label" })
                <span class="text-danger">*</span>
                @Html.TextBoxFor(m => m.lname, new { @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(m => m.lname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row g-3 mt-3">
            <div class="col-md-4">
                @Html.LabelFor(m => m.dob, "Date of Birth", new { @class = "form-label" })
                <span class="text-danger">*</span>
                @Html.TextBoxFor(m => m.dob, new
                {
                    @class = "form-control",
                    type = "date",
                    required = "required",
                    placeholder = "Select date",
                    value = (Model.dob != DateTime.MinValue) ? Model.dob.ToString("yyyy-MM-dd") : ""
                })
                @Html.ValidationMessageFor(m => m.dob, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">
                @Html.LabelFor(m => m.pob, "Place of Birth", new { @class = "form-label" })
                <span class="text-danger">*</span>
                @Html.TextBoxFor(m => m.pob, new { @class = "form-control", required = "required", placeholder = "Enter place of birth" })
                @Html.ValidationMessageFor(m => m.pob, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">
                @Html.LabelFor(m => m.cntct, "Contact", new { @class = "form-label" })
                <span class="text-danger">*</span>
                @Html.TextBoxFor(m => m.cntct, new { @class = "form-control", type = "tel", required = "required", placeholder = "Enter phone number" })
                @Html.ValidationMessageFor(m => m.cntct, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row g-3 mt-3">
            <div class="col-md-4">
                @Html.LabelFor(m => m.ntlnty, "Nationality", new { @class = "form-label" })
                <span class="text-danger">*</span>
                @Html.DropDownListFor(m => m.ntlnty, (SelectList)ViewBag.Nationalities, "Select Nationality", new { @class = "form-select", required = "required" })
                @Html.ValidationMessageFor(m => m.ntlnty, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">
                @Html.LabelFor(m => m.religion, "Religion", new { @class = "form-label" })
                <span class="text-danger">*</span>
                @Html.DropDownListFor(m => m.religion, (SelectList)ViewBag.Religions, "Select Religion", new { @class = "form-select", required = "required" })
                @Html.ValidationMessageFor(m => m.religion, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">
                <label class="form-label">Gender: <span class="text-danger">*</span></label>
                <div class="form-check form-check-inline">
                    @Html.RadioButtonFor(m => m.gender, "Male", new { @class = "form-check-input", id = "male" })
                    <label for="male" class="form-check-label">Male</label>
                </div>
                <div class="form-check form-check-inline">
                    @Html.RadioButtonFor(m => m.gender, "Female", new { @class = "form-check-input", id = "female" })
                    <label for="female" class="form-check-label">Female</label>
                </div>
                <div class="form-check form-check-inline">
                    @Html.RadioButtonFor(m => m.gender, "Other", new { @class = "form-check-input", id = "other" })
                    <label for="other" class="form-check-label">Other</label>
                </div>
                @Html.ValidationMessageFor(m => m.gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Hidden fields for fixed qualifications -->
        @Html.HiddenFor(m => m.q1)
        @Html.HiddenFor(m => m.q2)
        @Html.HiddenFor(m => m.q3)
        @Html.HiddenFor(m => m.q4)
        @Html.HiddenFor(m => m.q5)

        <!-- Qualifications Table -->
        <h4 class="mt-4">Academic Qualifications</h4>
        <div class="table-responsive">
            <table class="table table-bordered border-dark">
                <thead class="table-dark text-white">
                    <tr>
                        <th>Qualification</th>
                        <th>Name of Institute</th>
                        <th>Name of Board/University</th>
                        <th>Year of Completion</th>
                        <th>Marks Obtained (%)</th>
                        <th>Division/Specialization</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <th>Secondary</th>
                        <td>@Html.TextBoxFor(m => m.noi1, new { @class = "form-control", required = "required" })</td>
                        <td>@Html.TextBoxFor(m => m.nobu1, new { @class = "form-control", required = "required" })</td>
                        <td>@Html.TextBoxFor(m => m.yoc1, new { @class = "form-control", type = "number", required = "required" })</td>
                        <td>@Html.TextBoxFor(m => m.mob1, new { @class = "form-control", type = "number", step = "0.01", required = "required" })</td>
                        <td>@Html.TextBoxFor(m => m.ds1, new { @class = "form-control" })</td>
                    </tr>
                    <tr>
                        <th>Sr. Secondary</th>
                        <td>@Html.TextBoxFor(m => m.noi2, new { @class = "form-control", required = "required" })</td>
                        <td>@Html.TextBoxFor(m => m.nobu2, new { @class = "form-control", required = "required" })</td>
                        <td>@Html.TextBoxFor(m => m.yoc2, new { @class = "form-control", type = "number", required = "required" })</td>
                        <td>@Html.TextBoxFor(m => m.mob2, new { @class = "form-control", type = "number", step = "0.01", required = "required" })</td>
                        <td>@Html.TextBoxFor(m => m.ds2, new { @class = "form-control" })</td>
                    </tr>
                    <tr>
                        <th>Graduation</th>
                        <td>@Html.TextBoxFor(m => m.noi3, new { @class = "form-control", required = "required" })</td>
                        <td>@Html.TextBoxFor(m => m.nobu3, new { @class = "form-control", required = "required" })</td>
                        <td>@Html.TextBoxFor(m => m.yoc3, new { @class = "form-control", type = "number", required = "required" })</td>
                        <td>@Html.TextBoxFor(m => m.mob3, new { @class = "form-control", type = "number", step = "0.01", required = "required" })</td>
                        <td>@Html.TextBoxFor(m => m.ds3, new { @class = "form-control" })</td>
                    </tr>
                    <tr>
                        <th>Post-graduation</th>
                        <td>@Html.TextBoxFor(m => m.noi4, new { @class = "form-control" })</td>
                        <td>@Html.TextBoxFor(m => m.nobu4, new { @class = "form-control" })</td>
                        <td>@Html.TextBoxFor(m => m.yoc4, new { @class = "form-control", type = "number" })</td>
                        <td>@Html.TextBoxFor(m => m.mob4, new { @class = "form-control", type = "number", step = "0.01" })</td>
                        <td>@Html.TextBoxFor(m => m.ds4, new { @class = "form-control" })</td>
                    </tr>
                    <tr>
                        <th>Professional Degree</th>
                        <td>@Html.TextBoxFor(m => m.noi5, new { @class = "form-control" })</td>
                        <td>@Html.TextBoxFor(m => m.nobu5, new { @class = "form-control" })</td>
                        <td>@Html.TextBoxFor(m => m.yoc5, new { @class = "form-control", type = "number" })</td>
                        <td>@Html.TextBoxFor(m => m.mob5, new { @class = "form-control", type = "number", step = "0.01" })</td>
                        <td>@Html.TextBoxFor(m => m.ds5, new { @class = "form-control" })</td>
                    </tr>
                </tbody>
            </table>
        </div>

        <!-- Accommodation and Play Sports -->
        <div class="row g-3 mt-3">
            <div class="col-md-6">
                <label class="form-label">Accommodation: <span class="text-danger">*</span></label>
                <div class="form-check form-check-inline">
                    @Html.RadioButtonFor(m => m.acc, "Yes", new { @class = "form-check-input", id = "accYes", required = "required" })
                    <label class="form-check-label" for="accYes">Yes</label>
                </div>
                <div class="form-check form-check-inline">
                    @Html.RadioButtonFor(m => m.acc, "No", new { @class = "form-check-input", id = "accNo" })
                    <label class="form-check-label" for="accNo">No</label>
                </div>
                @Html.ValidationMessageFor(m => m.acc, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-6">
                <label class="form-label">Play Sports: <span class="text-danger">*</span></label>
                <div class="form-check form-check-inline">
                    @Html.RadioButtonFor(m => m.sp, "Yes", new { @class = "form-check-input", id = "spYes", required = "required" })
                    <label class="form-check-label" for="spYes">Yes</label>
                </div>
                <div class="form-check form-check-inline">
                    @Html.RadioButtonFor(m => m.sp, "No", new { @class = "form-check-input", id = "spNo" })
                    <label class="form-check-label" for="spNo">No</label>
                </div>
                @Html.ValidationMessageFor(m => m.sp, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Languages -->
        <h4 class="mt-4">Known Languages</h4>
        <div class="container">
            @foreach (var lang in new[] { "English", "German", "Spanish", "Italian", "French", "Other" })
            {
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" name="Languages" value="@lang" @(new[] { Model.l1, Model.l2, Model.l3, Model.l4, Model.l5, Model.l6 }.Contains(lang) ? "checked" : "") />
                    <label class="form-check-label">@lang</label>
                </div>
            }
        </div>

        <!-- Image Upload -->
        <div class="row g-3 mt-3">
            <div class="col-md-4">
                <label for="file" class="form-label">Upload Image: <span class="text-danger">*</span></label>
                <input type="file" name="file" class="form-control" />
                @if (!string.IsNullOrEmpty(Model.image))
                {
                    <p>Current Image: <img src="@Model.image" alt="Current Image" style="max-width: 100px; height: auto;" /></p>
                }
            </div>
        </div>

        <!-- Save Button -->
        <div class="d-flex justify-content-center mt-3">
            <button type="submit" class="btn btn-primary px-4">Save Changes</button>
            <a href="@Url.Action("ViewStudents", "Student")" class="btn btn-secondary px-4 ms-2">Cancel</a>
        </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}